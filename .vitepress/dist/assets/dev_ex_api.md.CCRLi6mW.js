import{_ as e,c as a,o as r,a4 as i}from"./chunks/framework.CeWJkJk4.js";const m=JSON.parse('{"title":"导出API","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"dev/ex_api.md","filePath":"dev/ex_api.md"}'),l={name:"dev/ex_api.md"},o=i('<h1 id="导出api" tabindex="-1">导出API <a class="header-anchor" href="#导出api" aria-label="Permalink to &quot;导出API&quot;">​</a></h1><p>使用导出 API，你可以在其他 LSE 插件甚至原生插件中调用 SparkAPI</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>API 仅支持 sparkbridge 2.3.4 以上，事件仅支持 sparkbridge 2.3.5 以上</p></div><p>要使用 sparkbridge 提供的导出 API，你需要使用 <a href="https://lse.liteldev.com/zh/apis/ScriptAPI/Ll/#_6" target="_blank" rel="noreferrer">LSE 的导入函数接口</a>，并将 sparkbridge2 设为插件依赖项或将导入函数部分放至服务器启动完毕后</p><p>如无特殊说明，sparkbridge 提供的导出 API 的命名空间均为 &#39;SparkAPI&#39;</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="getgroupid" tabindex="-1">GetGroupId() <a class="header-anchor" href="#getgroupid" aria-label="Permalink to &quot;GetGroupId()&quot;">​</a></h3><p>函数的导出名称:<code>GetGroupId</code></p><p>获取配置文件中的群号</p><ul><li><p><strong>参数:无</strong></p></li><li><p><strong>返回值:配置文件中的群号，即sparkbridge插件中的spark.mc.config.group</strong></p></li></ul><h3 id="qq-发送-api" tabindex="-1">QQ 发送 API <a class="header-anchor" href="#qq-发送-api" aria-label="Permalink to &quot;QQ 发送 API&quot;">​</a></h3><h4 id="sendgroupmsg-gid-msg" tabindex="-1">sendGroupMsg(gid, msg) <a class="header-anchor" href="#sendgroupmsg-gid-msg" aria-label="Permalink to &quot;sendGroupMsg(gid, msg)&quot;">​</a></h4><p>函数的导出名称:<code>sendGroupMsg</code></p><p>发送一个群信息</p><ul><li><strong>参数：</strong><ul><li><code>gid</code>：群ID。</li><li><code>msg</code>：信息内容。</li></ul></li></ul><h4 id="sendprivatemsg-fid-msg" tabindex="-1">sendPrivateMsg(fid, msg) <a class="header-anchor" href="#sendprivatemsg-fid-msg" aria-label="Permalink to &quot;sendPrivateMsg(fid, msg)&quot;">​</a></h4><p>函数的导出名称:<code>sendPrivateMsg</code></p><p>发送一个私信信息</p><ul><li><strong>参数：</strong><ul><li><code>fid</code>：好友ID。</li><li><code>msg</code>：信息内容。</li></ul></li></ul><h4 id="sendgroupforwardmsg-gid-msg" tabindex="-1">sendGroupForwardMsg(gid, msg) <a class="header-anchor" href="#sendgroupforwardmsg-gid-msg" aria-label="Permalink to &quot;sendGroupForwardMsg(gid, msg)&quot;">​</a></h4><p>函数的导出名称:<code>sendGroupForwardMsg</code></p><p>发送群合并聊天信息</p><ul><li><strong>参数：</strong><ul><li><code>gid</code>：群ID。</li><li><code>msg</code>：自定义转发消息, 具体看 <a href="https://docs.go-cqhttp.org/cqcode/#%E5%90%88%E5%B9%B6%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF%E8%8A%82%E7%82%B9" target="_blank" rel="noreferrer">CQcode</a>。</li></ul></li></ul><h4 id="deletemsg-id" tabindex="-1">deleteMsg(id) <a class="header-anchor" href="#deletemsg-id" aria-label="Permalink to &quot;deleteMsg(id)&quot;">​</a></h4><p>函数的导出名称:<code>deleteMsg</code></p><p>撤回某个信息</p><ul><li><strong>参数：</strong><ul><li><code>id</code>：信息id</li></ul></li></ul><h3 id="sendwspack-msg" tabindex="-1">sendWSPack(msg) <a class="header-anchor" href="#sendwspack-msg" aria-label="Permalink to &quot;sendWSPack(msg)&quot;">​</a></h3><p>函数的导出名称:<code>sendWSPack</code></p><p>发送一条websocket消息</p><ul><li><strong>参数：</strong><ul><li><code>msg</code>：要发送的websocket消息</li></ul></li></ul><h3 id="msgbuilder-api" tabindex="-1">Msgbuilder API <a class="header-anchor" href="#msgbuilder-api" aria-label="Permalink to &quot;Msgbuilder API&quot;">​</a></h3><h4 id="img-file" tabindex="-1">img(file) <a class="header-anchor" href="#img-file" aria-label="Permalink to &quot;img(file)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.img</code></p><p>返回表示图片消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>file</code>（字符串 | Buffer）：图片文件的路径或图片缓冲区。</li></ul></li><li><p><strong>返回值：</strong> 包含图片数据的对象。</p></li></ul><h4 id="at-qid" tabindex="-1">at(qid) <a class="header-anchor" href="#at-qid" aria-label="Permalink to &quot;at(qid)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.at</code></p><p>返回表示 @提及 消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>qid</code>（字符串）：QQ ID。</li></ul></li><li><p><strong>返回值：</strong> 包含 @提及 数据的对象。</p></li></ul><h4 id="face-id" tabindex="-1">face(id) <a class="header-anchor" href="#face-id" aria-label="Permalink to &quot;face(id)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.face</code></p><p>返回表示表情消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>id</code>（字符串）：表情 ID。</li></ul></li><li><p><strong>返回值：</strong> 包含表情数据的对象。</p></li></ul><h4 id="text-raw" tabindex="-1">text(raw) <a class="header-anchor" href="#text-raw" aria-label="Permalink to &quot;text(raw)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.text</code></p><p>返回表示文本消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>raw</code>（字符串）：原始文本。</li></ul></li><li><p><strong>返回值：</strong> 包含文本数据的对象。</p></li></ul><h4 id="poke-id" tabindex="-1">poke(id) <a class="header-anchor" href="#poke-id" aria-label="Permalink to &quot;poke(id)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.poke</code></p><p>返回表示戳一戳消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>id</code>（字符串）：QQ ID。</li></ul></li><li><p><strong>返回值：</strong> 包含戳一戳数据的对象。</p></li></ul><h4 id="reply-id" tabindex="-1">reply(id) <a class="header-anchor" href="#reply-id" aria-label="Permalink to &quot;reply(id)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.reply</code></p><p>返回表示回复消息的对象。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>id</code>（字符串）：回复 ID。</li></ul></li><li><p><strong>返回值：</strong> 包含回复数据的对象。</p></li></ul><h4 id="format-msg" tabindex="-1">format(msg) <a class="header-anchor" href="#format-msg" aria-label="Permalink to &quot;format(msg)&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.format</code></p><p>格式化消息以确保其结构正确。</p><ul><li><p><strong>参数：</strong></p><ul><li><code>msg</code>（字符串 | 对象 | 数组）：要格式化的消息（们）。</li></ul></li><li><p><strong>返回值：</strong> 格式化后的消息。</p></li></ul><h4 id="forwardmsgbuilder" tabindex="-1">ForwardMsgBuilder() <a class="header-anchor" href="#forwardmsgbuilder" aria-label="Permalink to &quot;ForwardMsgBuilder()&quot;">​</a></h4><p>函数的导出名称:<code>msgbuilder.ForwardMsgBuilder</code></p><p>返回 ForwardMsgBuilder 的新实例。</p><ul><li><strong>返回值：</strong> ForwardMsgBuilder 的新实例。</li></ul>',64),d=[o];function s(t,p,g,n,c,u){return r(),a("div",null,d)}const b=e(l,[["render",s]]);export{m as __pageData,b as default};
