import{_ as t,c as e,o as a,a4 as r}from"./chunks/framework.CeWJkJk4.js";const f=JSON.parse('{"title":"监听器","description":"","frontmatter":{},"headers":[],"relativePath":"dev/listener.md","filePath":"dev/listener.md"}'),d={name:"dev/listener.md"},n=r('<h1 id="监听器" tabindex="-1">监听器 <a class="header-anchor" href="#监听器" aria-label="Permalink to &quot;监听器&quot;">​</a></h1><p>在上一章节中，我们完成了一个基础的插件。</p><p>或许你有注意到，我们使用<code>spark.on</code>设置了两个事件监听器。</p><p>你一定想知道都有什么事件可以监听，在这一章，我将告诉你。</p><table tabindex="0"><thead><tr><th>事件名称</th><th style="text-align:center;">事件</th></tr></thead><tbody><tr><td>bot.online</td><td style="text-align:center;">机器人登录成功</td></tr><tr><td>message.group.normal</td><td style="text-align:center;">收到群聊消息</td></tr><tr><td>message.private.friend</td><td style="text-align:center;">收到好友私聊消息</td></tr></tbody></table><p>这三个是基础的事件名称，如果您想发掘更多事件，请开启调试模式后观察控制台，SparkBridge会输出每一个收到的事件。</p>',6),s=[n];function o(i,l,c,_,p,h){return a(),e("div",null,s)}const g=t(d,[["render",o]]);export{f as __pageData,g as default};
